#+include: "../common/header.org"
#+Title: /Software/ e interfaz con el usuario
#+REVEAL_THEME: simple

* Introducción


- El /software/ son los componententes lógicos de un sistema informático.
  - Elementos intangibles
  - Incluye: programas, configuración, documentación, datos

* Tipos de /software/

** Según su funcionalidad
- *De sistema*: Relacionado con la gestión del software
- *De aplicación*: Cubre las necesidades de los usuarios
- *De programación*: Permite La creación de nuevo /software/ (programas)

*** /Software/ de sistema
Es todo el /software/ dedicado a gestionar el /hardware/ y otro /software/. En el fondo, *no realiza una tarea realmente útil al usuario*, simplemente mantiene a punto el ordenador.
- Sistema operativo
- Herramientas de diagnóstico
- Utilidades
- Controladores de dispositivo

*** /Software/ de aplicación
El el /software/ por el que el usuario utiliza el ordenador, y resuelven un problema concreto:
- Gestión empresarial
- Educación
- Telecomunicaciones
- Ingeniería
Algunos ejemplos de /software/ de aplicación son:
- Procesadores de texto
- Editores de imágenes
- Navegadores
- Sistemas gestores de bases de datos
- Automatizaciones industriales
- Mensajerías

*** /Software/ de programación
Sirven para crear el resto del /software/
- Editores de texto
- Compiladores
- Enlazadores
- Depuradores
- IDE

*** Clasifica los siguientes programas según su funcionalidad
- Windows 10
- LibreOffice
- Gimp
- CyanogenMod
- Avast 
- Eclipse
- Scratch



** Según sus limitaciones de uso
- */Software/ libre*: Pueden utilizarse, copiarse, distribuirse y modificarse por el usuario
  - Para poder modificarse, debe incluirse el *código fuente*
  - Esto no quiere decir que no tenga /copyright/
- */Software/ propietario*: El autor intenta monetizar su esfuerzo, por lo que limita las posibilidades del usuario
  - *Comercial* (de pago): Compra de licencia obligatoria para el uso del /software/
  - */Freeware/*: Gratis, pero sin derechos como la redistribución o el código fuente
  - */Adware/*: Gratis, pero el programa muestra publicidad
  - */Shareware/*: Gratis para su evaluación, necesita una compra de licencia para su uso continuado
  - */Freemium/*: Gratis en versión limitada, necesita una compra de licencia para aumentar su funcionalidad

*** ¿Qué tipo de /software/ tienes instalado en el teléfono?
- Un voluntario deja que el profesor haga una lista de las aplicaciones instaladas en su teléfono
  - Y si no hay voluntario, las del teléfono del profesor
- ¿Qué tipo de /software/ (según sus limitaciones y condiciones de uso) son esos programas?



* Licencias

- Contratos o acuerdos legales que se establecen entre los usuarios de /software/ y su autor
- Describen 
  - Las condiciones de uso (de las que ya hemos hablado)
  - Derechos y obligaciones de ambas partes

- En el /software/ comercial, cada compañía define su contrato
- En el /software/ libre, existen varias licencias disponibles (aunque cada autor puede definir otras)
-------
¿Conoces las [[https://www.facebook.com/legal/terms][condiciones de uso]] de Facebook?

¿Conoces las [[https://www.google.com/policies/terms/][condiciones de uso]] de Google?

** /Free Software Foundation/
- Fundada en 1985 por [[https://es.wikipedia.org/wiki/Richard_Stallman][Richard Stallman]] (entre otros)
- Promueve el /software/ libre
- Licencia *GPL* y *LGPL*
- Sistema operativo *GNU*
- Su filosofía no es amigable con las empresas
  - La /Open Source Initiative/ intenta conjugar la libertad con la monetización del /software/

| [[file:Free-Software-Foundation-logo-and-wordmark.svg]] |   | [[file:open-source-initiative.png]] |

** Licencias de /software/ libre
- *GPL*: Licencia pública general
  - Mantiene el /copyright/ de los autores
  - Obliga a que cualquier /software/ que incluya o use un componente GPL sea a su vez GPL
  - Es una licencia *contagiosa*
- *LGPL*: Licencia pública general reducida
  - Similar a GPL, pero sin la parte contagiosa
- *AGPL*: Licencia pública general de Affero
  - Como GPL, pero obliga a distribuir el /software/ que utilize un componente AGPL.
#+REVEAL: split
- *BSD*: Licencia de Berkely
  - Permite utilizar, modificar, redistribuir sin necesidad de mencionar a los autores y dar el código fuente
  - Permite cambiar la licencia
- *MPL*: Licencia Mozzila
  - Permite la utilización comercial sin redistribuir el código fuente 
- *MIT*:
  - Similar a MPL

** Actividades
- Busca la diferencia entre:
  - Derechos de autor
  - /Copyright/
-------
- Busca la diferencia entre:
  - /Software/ gratis
  - /Software/ libre
-------
- ¿Qué son las licencias /Creative Commons/
  - Decide qué tipo de licencia /CC/ aplicarás en tus trabajos de esta asignatura

** Licencia de Windows 10
Estudia la [[https://www.microsoft.com/en-us/Useterms/Retail/Windows/10/UseTerms_Retail_Windows_10_Spanish.htm][licencia de Windows 10]] 
- ¿Puedes instalar Windows 10 en una máquina virtual?
- ¿Puedes utilizarlo como servidor en una red con 15 clientes?
- ¿Puedes instalarlo en tres dispositivos?
- ¿Es obligatorio el proceso de activación, o sólo recomendable para obtener actualizaciones?



* El sistema operativo
  :PROPERTIES:
  :ATTACH_DIR: /home/alvaro/SincronizadoCloud/MEGASync/2016-2017-Rosa-Chacel/tico1-bach1/apuntes/3/data/
  :END:
- Programas que iteractúan entre el hardware del ordenador y
  - el resto de programas
  - los usuarios

[[file:data/esquema-os-aplicaciones-usuarios.png]]

#+reveal: split
Los sistemas operativos se han creado con los siguientes objetivos
- Simplificar el uso de los odenadores
- Utilizar el /hardware/ y los recursos con mayor eficiencia
- Aumentar la seguridad (confidencialidad e integridad de los datos)

** Ejemplos de sistemas operativos
- Para ordenadores personales
  - Windows
  - GNU/Linux
  - OS X
  - FreeBSD

- Para teléfonos móviles
  - Android (basado en GNU/Linux)
  - iOS
  - En menor medida, Windows Phone

- Para aplicaciones industriales
  - Windows CE
  - QNX
  - RTMES

*** ¿Qué sistema operativo es mejor para...?
Decide cuál de estos sistemas operativos te parece más adecuado para:
- una máquina de resonancia magnética nuclear
- los sistemas de un coche autónomo
- los servidores de una empresa
- una nevera inteligente 



* Evolución de los sistemas operativos
  :PROPERTIES:
  :ATTACH_DIR: /home/alvaro/SincronizadoCloud/MEGASync/2016-2017-Rosa-Chacel/tico1-bach1/apuntes/3/data/
  :END:
Los sistemas operativos evolucionan junto con el /hardware/ y las aplicaciones
- *Sin S.O.*: Los programas se escribían el lenguaje máquina y se lanzaban sin más al arrancar el ordenador
   - Cada programa era su "propio" S.O.
- *Procesamiento en serie manual*
   - Los programas se cargaban (con tarjetas perforadas)
   - Se compilaban y ejecutaban
   - Al terminar, o si había algún error, se pasaba al siguiente programa
- *Procesamiento por lotes* (años 50)
   - Similar al procesamiento serie, pero un programa se encarga de ir dando paso al resto de programas
   - Este programa era el *monitor residente* (germen del S.O.)
#+reveal: split
- *Multiprogramación*
   - Se pierde mucho tiempo en la E/S (la CPU no se usa)
   - Se introducen varios programas simultáneos en la memoria, y cuando uno realiza E/S otro puede utilizar la CPU [[file:data/multiprogramacion.png]]
- *Tiempo compartido*
   - Reparto del tiempo de CPU y E/S entre diferentes usuarios
#+reveal: split
- *S.O. en red*
   - El S.O. muestra los recursos de otros ordenadores 
   - Impresoras, ficheros, escáneres...
- *S.O. distribuido*
   - El S.O. proporciona acceso a todos los recursos de la red como si fueran locales
   - Un fallo en un servidor no afecta a los recursos (pueden accederse en otras copias)

* Tipos de sistemas operativos

** Según el número de usuarios
-Un *usuario* del sistema operativo comprende
  - *Entorno de seguridad*: Permisos sobre cada uno de los elementos del S.O.
    - Ficheros
    - Discos
    - Dispositivos
    - Conexiones de red
    - ...
  - *Configuración*
    - Fondo de escritorio
    - Aplicaciones favoritas
    - ...
#+reveal: split
- Un S.O. puede ser
  - *Monousuario*: (en realidad, sin usuarios) El operador del S.O. tiene todos los permisos
  - *Multiusuario*: Los recursos del sistema se reparten entre cada usuario, con diferentes niveles de acceso y personalización.

 
** Según el número de tareas simultáneas  
- *Monotarea*
  - El S.O. solo permite la ejecución de un programa a la vez
- *Multitarea* o *multiprogramación*
  - Varias tareas se van alternando en el uso de la CPU y los dispositivos
  - Intervalo: 10 a 200ms
  - El usuario percibe que todas se ejecutan a la vez 
- *Multiproceso*
  - El /hardware/ tiene capacidad para ejecutar más de un programa a la vez
    - /Hyperthreading/
    - /Multicore/
  
** Según el modo de arranque
- Instalables
  - Se instalan en el disco duro del ordenador
- Autoarrancables
  - Pueden arrancar desde medios de almacenamiento extraíbles: CD, memoria USB...

** Según el uso de la red
 - Centralizado
   - El S.O. no tiene facilidades para uso en red
 - En red
   - El S.O. puede conectarse a otros ordenadores por red
   - El usuario y los programas deben distinguir entre recursos locales y remotos
 - Distribuido
   - El S.O. hace que los recursos remotos parezcan locales
   - Los programas tratan los recursos remotos *sin saber* que son remotos
 -------
 ¿Una unidad compartida de Windows puede utilizarse como una local?
 ¿Servicios como *DropBox* o *OneDrive* pueden utilizarse como una unidad local?

** Según la interfaz con el usuario
- Interfaz *CLI* (/command line interface/)
  - Órdenes textuales mediante teclado
  - Matriz de caracteres, generalmente con desplazamiento hacia arriba
[[file:interfaz-cli.png]]
- Interfaz *GUI* (/graphical user interface/)
  - Permite imágenes, sonidos y dispositivos apuntadores
  - Inicialmente, más simple para usuarios inexpertos

* Funciones de los sistemas operativos

** Función principal
- La función principal del sistema operativo es *abstraer* y *aislar* a los dispositivos y programas unos de otros
- El objetivo es que los programas:
  - Interfieran lo mínimo entre sí
  - Accedan a todo el /hardware/ como si fuera exclusivamente suyo
  - Se comuniquen entre sí de forma *estructurada*

** Funciones
- Gestionar el procesador
  - Asignar a cada proceso el tiempo necesario
  - Asegurarse de que los procesos no se [[https://es.wikipedia.org/wiki/Bloqueo_mutuo][bloquean]]
- Gestionar la memoria principal
  - Asignar parte de la memoria a cada proceso
  - Manejar la jerarquía de memoria (paginación a disco)
- Gestionar la entrada/salida
  - El S.O. es el único que maneja los dispositivos
  - A través de los /drivers/
- Gestionar la seguridad
  - Permisos de accceso y modificación
#+reveal: split
- Gestionar la comunicación
  - Entre ordenadores (red)
  - Entre procesos (ficheros, [[https://es.wikipedia.org/wiki/Tuber%25C3%25ADa_(inform%25C3%25A1tica)][tuberías]]...)
- Gestionar el almacenamiento secundario
  - Sistemas de ficheros


** Sistema de ficheros
- Los discos son una lista de posiciones de memoria no volátil
  - Cada posición tiene unos 512-8092 Bytes
  - Se denomina *sector*
- Los programas no utilizan directamente esta memoria
  - El S.O. crea sobre los sectores un *sistema de ficheros*
  - Una estructura jerárquica que contiene:
    - *Unidades de disco*: Generalmente, una por dispositivo de almacenamiento
    - *Directorios*: Listas de ficheros y otros directorios. Cada *unidad* tiene un directorio inicial
    - *Ficheros*: Lista de bytes con un nombre
#+reveal: split
| [[file:sistema-de-ficheros.svg]] | [[file:arbol-directorio-c.png]] |
#+reveal: split
El escritorio de Windows ¿es una unidad o un directorio?

[[file:arbol-escritorio.png]]

*** Ejemplos de sistemas de ficheros
- *[[https://es.wikipedia.org/wiki/Tabla_de_asignaci%25C3%25B3n_de_archivos][FAT]]* 
  - Sistema original de *MsDOS*
  - Actualmente, se usa la versión *FAT32*
  - No soporta permisos
  - Puede /romperse/ con facilidad
  - Muy utilizado por su simplicidad
- *NTFS*
  - Windows
  - Soporta permisos, compresión, metadatos...
- *Ext*
  - Linux
  - Similar (para este curso) a NTFS
  - Actualmente, versión *Ext3*

#+reveal: split
Completa la siguiente tabla

|---+-------+---------------------+--------------------------+------------+----------+---------+---------------------------+------|
|   |       | Tamaño máximo total | Tamaño máximo de fichero | Compresión | Permisos | Cifrado | Longitud máxima de nombre | S.O. |
|---+-------+---------------------+--------------------------+------------+----------+---------+---------------------------+------|
| / | <>    | <>                  | <>                       | <>         | <>       | <>      | <>                        |      |
|   | FAT16 |                     |                          |            |          |         |                           |      |
|   | FAT32 |                     |                          |            |          |         |                           |      |
|   | Ext4  |                     |                          |            |          |         |                           |      |
|   | NTFS  |                     |                          |            |          |         |                           |      |
|   | XFS   |                     |                          |            |          |         |                           |      |
|   | HFS+  |                     |                          |            |          |         |                           |      |
|---+-------+---------------------+--------------------------+------------+----------+---------+---------------------------+------|


* Referencias
- Tecnologías de la Información y la Comunicación (I)
  - Irene Rodil Jiménez; Manuel Pedro Blázquez Merino
  - Editorial Bruño
- [[https://alvarogonzalezsotillo.github.io/tico1-bach1/apuntes/3/tico1-3-software.html][Estas diapositivas]]
  - Y su [[https://github.com/alvarogonzalezsotillo/tico1-bach1/blob/gh-pages/apuntes/3/tico1-3-software.org][código fuente]]


 
 
